"""
Each new term in the Fibonacci sequence is generated by
adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89
By considering the terms in the Fibonacci sequence
whose values do not exceed four million,
find the sum of the even-valued terms."""

from functools import lru_cache


@lru_cache()
def fib(n):
    if n < 1:
        return "Impossible"
    elif n == 1:
        return 1
    elif n == 2:
        return 2
    else:
        return fib(n - 1) + fib(n - 2)


if __name__ == "__main__":
    total = 0
    limit = 4_000_000
    n = 2  # starting from 2, every third fib if even
    while fib(n) < limit:
        total += fib(n)
        n += 3
    print(total)
